{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","searchedTodos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setFilteredSelect","query","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","findedUser","href","email","name","App","visibleTodos","setVisibleTodos","filteredSelect","todoId","filter","titleToLowerCase","toLowerCase","queryToLowerCase","includes","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c54f600.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  searchedTodos: Todo[],\n  selectedTodo: number,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  searchedTodos: todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    {todos.map(todo => (\n      <tbody>\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodo,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )\n              : <></>}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': selectedTodo !== todo.id,\n                  'fa-eye-slash': selectedTodo === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    ))}\n\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  setFilteredSelect: React.Dispatch<string>,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilteredSelect,\n  query,\n  setQuery,\n}) => {\n  const clearQueryField = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilteredSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQueryField}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo | null,\n  selectedTodo: React.Dispatch<React.SetStateAction<number>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(findedUser => setUser(findedUser));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!user || !todo) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectedTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [filteredSelect, setFilteredSelect] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setVisibleTodos(todos);\n      });\n  }, []);\n\n  const filteredTodos = visibleTodos.filter(todo => {\n    switch (filteredSelect) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      case 'all':\n        return todo;\n      default:\n        return todo;\n    }\n  });\n\n  const searchedTodos = filteredTodos.filter(todo => {\n    const titleToLowerCase = todo.title.toLowerCase();\n    const queryToLowerCase = query.toLowerCase();\n\n    return titleToLowerCase.includes(queryToLowerCase);\n  });\n\n  const todosId = (todoId: number) => {\n    return visibleTodos.find(todo => todo.id === todoId);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredSelect={setFilteredSelect}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length === 0 && <Loader />}\n\n              {visibleTodos.length > 0 && (\n                <TodoList\n                  searchedTodos={searchedTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== 0 && (\n        <TodoModal\n          todo={todosId(selectedTodo) || null}\n          selectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}